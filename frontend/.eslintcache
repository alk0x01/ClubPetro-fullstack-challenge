[{"D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\components\\CardTemplate\\index.tsx":"1","D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\components\\Header\\index.tsx":"2","D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\Pages\\Landing.tsx":"3","D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\components\\InputArea\\styles.ts":"4","D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\components\\EditScreen\\styles.ts":"5","D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\styles\\global.ts":"6","D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\services\\rest-countries-api.ts":"7","D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\components\\InputArea\\index.tsx":"8","D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\services\\api.ts":"9","D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\index.tsx":"10","D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\App.tsx":"11","D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\components\\CardTemplate\\styles.ts":"12","D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\components\\Header\\styles.ts":"13"},{"size":3507,"mtime":1611657434561,"results":"14","hashOfConfig":"15"},{"size":276,"mtime":1611614699721,"results":"16","hashOfConfig":"15"},{"size":332,"mtime":1611629534674,"results":"17","hashOfConfig":"15"},{"size":2090,"mtime":1611629624470,"results":"18","hashOfConfig":"15"},{"size":1421,"mtime":1611611039229,"results":"19","hashOfConfig":"15"},{"size":371,"mtime":1611627358233,"results":"20","hashOfConfig":"15"},{"size":164,"mtime":1611561019735,"results":"21","hashOfConfig":"15"},{"size":4415,"mtime":1611787464177,"results":"22","hashOfConfig":"15"},{"size":123,"mtime":1611782854689,"results":"23","hashOfConfig":"15"},{"size":146,"mtime":1611564866459,"results":"24","hashOfConfig":"15"},{"size":143,"mtime":1611564114115,"results":"25","hashOfConfig":"15"},{"size":1175,"mtime":1611605622827,"results":"26","hashOfConfig":"15"},{"size":296,"mtime":1611611778570,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11n78t9",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\components\\CardTemplate\\index.tsx",[],["59","60","61","62","63"],"D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\components\\Header\\index.tsx",[],["64","65","66","67","68"],"D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\Pages\\Landing.tsx",[],["69","70","71","72","73"],"D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\components\\InputArea\\styles.ts",[],"D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\components\\EditScreen\\styles.ts",[],"D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\styles\\global.ts",[],"D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\services\\rest-countries-api.ts",[],"D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\components\\InputArea\\index.tsx",["74","75","76"],"/* eslint-disable prefer-template */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState, useEffect } from 'react';\r\nimport InputMask from 'react-input-mask';\r\nimport CardTemplate, { ICard } from '../CardTemplate/index';\r\nimport {\r\n  Container,\r\n  Form,\r\n  Country,\r\n  Place,\r\n  Button,\r\n  ContainerCards,\r\n} from './styles';\r\nimport './stylesInputMask.css';\r\nimport apiRestCountries from '../../services/rest-countries-api';\r\nimport api from '../../services/api';\r\n\r\ninterface Countries {\r\n  id: number;\r\n  name: string;\r\n  flag: string;\r\n}\r\n\r\nconst Landing: React.FC = () => {\r\n  const [countries, setCountries] = useState<Countries[]>([]);\r\n  const [cards, setCards] = useState<ICard[]>([]);\r\n\r\n  const [name, setName] = useState('');\r\n  const [place, setPlace] = useState('');\r\n  const [flag, setFlag] = useState('');\r\n  const [goal, setGoal] = useState('');\r\n\r\n  useEffect(() => {\r\n    apiRestCountries.get('/').then((response) => {\r\n      const allCountries = response.data.map(\r\n        (country: {\r\n          translations: { br: string };\r\n          flag: { flag: string };\r\n          callingCodes: { id: number };\r\n        }) => {\r\n          return {\r\n            name: country.translations.br,\r\n            flag: country.flag,\r\n          };\r\n        },\r\n      );\r\n\r\n      setCountries(allCountries);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    api.get('/places').then(async (response) => {\r\n      const allCards = response.data;\r\n\r\n      if (allCards) {\r\n        setCards(allCards);\r\n      } else console.log('Have no cards');\r\n    });\r\n  }, []);\r\n\r\n  const handleOption = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const array = event.target.value.split(',');\r\n\r\n    const selectedName = array[0];\r\n    const selectedFlag = array[1];\r\n\r\n    setName(selectedName);\r\n    setFlag(selectedFlag);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const data = {\r\n      pais: name,\r\n      local: place,\r\n      url: flag,\r\n      meta: goal,\r\n    };\r\n\r\n    let allDataFilled = false;\r\n\r\n    if (name && place && flag && goal) {\r\n      allDataFilled = true;\r\n    }\r\n\r\n    let checkCardExist = false;\r\n\r\n    cards.map((card) => {\r\n      if (card.pais === data.pais) {\r\n        if (card.local === data.local) {\r\n          checkCardExist = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (allDataFilled === true) {\r\n      if (checkCardExist === false) {\r\n        await api.post('/places', data);\r\n      } else {\r\n        alert(\r\n          'Ops! Parece que você já adicionou um cartão com esse país e local...',\r\n        );\r\n      }\r\n    } else {\r\n      alert('Preencha todos os campos!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Container>\r\n          <label>País</label>\r\n          <Country\r\n            placeholder=\"Selecione...\"\r\n            onChange={(event) => handleOption(event)}\r\n            defaultValue=\"\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Selecione...\r\n            </option>\r\n            {countries.map((country) => {\r\n              return [\r\n                <option key={country.id} value={[country.name, country.flag]}>\r\n                  {country.name}\r\n                </option>,\r\n              ];\r\n            })}\r\n          </Country>\r\n        </Container>\r\n\r\n        <Container>\r\n          <label>Local</label>\r\n          <Place\r\n            name=\"Place\"\r\n            type=\"text\"\r\n            value={place}\r\n            placeholder=\"Digite o local que deseja conhecer\"\r\n            onChange={(event) => setPlace(event.target.value)}\r\n          />\r\n        </Container>\r\n\r\n        <Container>\r\n          <label>Meta</label>\r\n          <InputMask\r\n            className=\"GoalInputMask\"\r\n            name=\"Goal\"\r\n            mask=\"99/9999\"\r\n            value={goal}\r\n            placeholder=\"mês/ano\"\r\n            onChange={(event) => setGoal(event.target.value)}\r\n          />\r\n        </Container>\r\n\r\n        <Container>\r\n          <Button type=\"submit\">Adicionar</Button>\r\n        </Container>\r\n      </Form>\r\n      <ContainerCards>\r\n        {cards.map((card) => {\r\n          return (\r\n            <CardTemplate\r\n              id={card.id}\r\n              pais={card.pais}\r\n              local={card.local}\r\n              url={card.url}\r\n              meta={card.meta}\r\n            />\r\n          );\r\n        })}\r\n      </ContainerCards>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\services\\api.ts",[],"D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\index.tsx",[],"D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\App.tsx",[],["77","78","79","80","81"],"D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\components\\CardTemplate\\styles.ts",[],"D:\\Desktop\\TI\\Projetos\\ClubPetro-fullstack-challenge\\frontend\\src\\components\\Header\\styles.ts",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"82","replacedBy":"92"},{"ruleId":"84","replacedBy":"93"},{"ruleId":"86","replacedBy":"94"},{"ruleId":"88","replacedBy":"95"},{"ruleId":"90","replacedBy":"96"},{"ruleId":"82","replacedBy":"97"},{"ruleId":"84","replacedBy":"98"},{"ruleId":"86","replacedBy":"99"},{"ruleId":"88","replacedBy":"100"},{"ruleId":"90","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":58,"column":14,"nodeType":"104","messageId":"105","endLine":58,"endColumn":25},{"ruleId":"106","severity":1,"message":"107","line":100,"column":9,"nodeType":"108","messageId":"105","endLine":102,"endColumn":10},{"ruleId":"106","severity":1,"message":"107","line":105,"column":7,"nodeType":"108","messageId":"105","endLine":105,"endColumn":41},{"ruleId":"82","replacedBy":"109"},{"ruleId":"84","replacedBy":"110"},{"ruleId":"86","replacedBy":"111"},{"ruleId":"88","replacedBy":"112"},{"ruleId":"90","replacedBy":"113"},"lines-around-directive",["114"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["114"],[],[],[],[],["114"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-alert","Unexpected alert.","CallExpression",["114"],[],[],[],[],"padding-line-between-statements"]